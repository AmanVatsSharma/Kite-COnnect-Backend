# =============================================================================
# Production Environment Configuration
# =============================================================================
# Copy this file to .env and fill in your actual production values
# DO NOT commit the .env file to version control (it's in .gitignore)
# =============================================================================

# -----------------------------------------------------------------------------
# Database Configuration (PostgreSQL)
# -----------------------------------------------------------------------------
DB_HOST=postgres
DB_PORT=5432
DB_USERNAME=trading_user
DB_PASSWORD=CHANGE_ME_STRONG_PASSWORD_HERE
DB_DATABASE=trading_app

# -----------------------------------------------------------------------------
# Redis Configuration
# -----------------------------------------------------------------------------
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=CHANGE_ME_REDIS_PASSWORD

# -----------------------------------------------------------------------------
# Kite Connect Configuration
# -----------------------------------------------------------------------------
# Your Kite Connect API credentials from Zerodha
KITE_API_KEY=your_kite_api_key_here
KITE_API_SECRET=your_kite_api_secret_here
KITE_ACCESS_TOKEN=your_kite_access_token_here
KITE_REDIRECT_URI=https://marketdata.vedpragya.com/api/auth/kite/callback

# -----------------------------------------------------------------------------
# Vortex Provider Configuration (Optional)
# -----------------------------------------------------------------------------
VORTEX_APP_ID=
VORTEX_API_KEY=
VORTEX_CREATE_SESSION_URL=https://vortex-api.rupeezy.in/v2/user/session
VORTEX_BASE_URL=https://vortex-api.rupeezy.in/v2
VORTEX_WS_URL=wss://wire.rupeezy.in/ws
VORTEX_REDIRECT_URI=https://marketdata.vedpragya.com/api/auth/vortex/callback
VORTEX_INSTRUMENTS_CSV_URL=https://static.rupeezy.in/master.csv

# -----------------------------------------------------------------------------
# Data Provider Selection
# -----------------------------------------------------------------------------
# Choose your primary data provider: 'kite' or 'vortex'
DATA_PROVIDER=kite

# -----------------------------------------------------------------------------
# JWT Configuration
# -----------------------------------------------------------------------------
# Generate a strong random secret for JWT tokens
# You can use: openssl rand -base64 32
JWT_SECRET=CHANGE_ME_GENERATE_STRONG_JWT_SECRET_HERE
JWT_EXPIRES_IN=24h

# -----------------------------------------------------------------------------
# Admin Configuration
# -----------------------------------------------------------------------------
# Generate a strong random token for admin operations
# You can use: openssl rand -base64 32
ADMIN_TOKEN=CHANGE_ME_GENERATE_STRONG_ADMIN_TOKEN_HERE

# -----------------------------------------------------------------------------
# Application Configuration
# -----------------------------------------------------------------------------
PORT=3000
NODE_ENV=production

# CORS Configuration
# Comma-separated list of allowed origins, or * for all
CORS_ORIGIN=https://marketdata.vedpragya.com

# -----------------------------------------------------------------------------
# WebSocket Configuration
# -----------------------------------------------------------------------------
WS_PORT=3001

# -----------------------------------------------------------------------------
# Meilisearch (Search Engine)
# -----------------------------------------------------------------------------
# Strong random key required; used by search-api/indexer to access Meili
MEILI_MASTER_KEY=CHANGE_ME_GENERATE_STRONG_MEILI_MASTER_KEY

# -----------------------------------------------------------------------------
# Search Indexer External DB (optional)
# -----------------------------------------------------------------------------
# Set these to point the indexer at your main Postgres that already has instruments.
# You can use host.docker.internal (mapped via host-gateway) to reach host Postgres.
# If unset, indexer uses the compose postgres service by default.
#INDEXER_DB_HOST=host.docker.internal
#INDEXER_DB_PORT=5432
#INDEXER_DB_USER=trading_user
#INDEXER_DB_PASSWORD=CHANGE_ME
#INDEXER_DB_NAME=trading_app

# -----------------------------------------------------------------------------
# Security Notes
# -----------------------------------------------------------------------------
# 1. Change all "CHANGE_ME" values to strong, random strings
# 2. Never share these credentials publicly
# 3. Use strong passwords (minimum 16 characters)
# 4. Rotate credentials regularly
# 5. Monitor for unauthorized access
# 6. Keep this file secure on your EC2 instance
# 7. Use environment-specific values (don't reuse dev/staging secrets)

# -----------------------------------------------------------------------------
# Quick Setup Commands
# -----------------------------------------------------------------------------
# Generate JWT_SECRET: openssl rand -base64 32
# Generate ADMIN_TOKEN: openssl rand -base64 32
# Generate DB_PASSWORD: openssl rand -base64 24


